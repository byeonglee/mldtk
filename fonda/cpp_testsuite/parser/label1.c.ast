#superc_args -printAST
ExternalDeclarationList(
  Conditional(
    1,
    FunctionDefinition(
      FunctionDeclarator(
        BasicDeclarationSpecifier(
          DeclarationQualifierList(
            Conditional(
              1,
              StorageClass(
                xtc.lang.cpp.Syntax$Language(
                  "static"
                )
              )
            )
          ),
          BasicTypeName(
            xtc.lang.cpp.Syntax$Language(
              "int"
            )
          )
        ),
        PostfixIdentifierDeclarator(
          SimpleDeclarator(
            xtc.lang.cpp.Syntax$Text(
              "_init_controller"
            )
          ),
          PostfixingAbstractDeclarator(
            ParameterTypeListOpt(
              ParameterTypeList(
                ParameterList(
                  Conditional(
                    1,
                    ParameterDeclaration(
                      SUETypeSpecifier(
                        ElaboratedTypeName(
                          StructOrUnionSpecifier(
                            StructOrUnion(
                              xtc.lang.cpp.Syntax$Language(
                                "struct"
                              )
                            ),
                            IdentifierOrTypedefName(
                              xtc.lang.cpp.Syntax$Text(
                                "device"
                              )
                            )
                          )
                        )
                      ),
                      UnaryIdentifierDeclarator(
                        xtc.lang.cpp.Syntax$Language(
                          "*"
                        ),
                        SimpleDeclarator(
                          xtc.lang.cpp.Syntax$Text(
                            "dev"
                          )
                        )
                      )
                    )
                  ),
                  Conditional(
                    1,
                    ParameterDeclaration(
                      BasicTypeSpecifier(
                        BasicTypeName(
                          xtc.lang.cpp.Syntax$Language(
                            "int"
                          )
                        )
                      ),
                      SimpleDeclarator(
                        xtc.lang.cpp.Syntax$Text(
                          "nIrq"
                        )
                      )
                    )
                  ),
                  Conditional(
                    1,
                    ParameterDeclaration(
                      BasicTypeSpecifier(
                        BasicTypeName(
                          xtc.lang.cpp.Syntax$Language(
                            "void"
                          )
                        )
                      ),
                      UnaryIdentifierDeclarator(
                        xtc.lang.cpp.Syntax$Language(
                          "*"
                        ),
                        SimpleDeclarator(
                          xtc.lang.cpp.Syntax$Text(
                            "ctrl"
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      ),
      DeclarationOrStatementList(
        Conditional(
          1,
          SelectionStatement(
            xtc.lang.cpp.Syntax$Language(
              "switch"
            ),
            IndirectSelection(
              PrimaryIdentifier(
                xtc.lang.cpp.Syntax$Text(
                  "plat"
                )
              ),
              xtc.lang.cpp.Syntax$Language(
                "->"
              ),
              IdentifierOrTypedefName(
                xtc.lang.cpp.Syntax$Text(
                  "mode"
                )
              )
            ),
            CompoundStatement(
              DeclarationOrStatementList(
                Conditional(
                  1,
                  LabeledStatement(
                    xtc.lang.cpp.Syntax$Language(
                      "case"
                    ),
                    PrimaryIdentifier(
                      xtc.lang.cpp.Syntax$Text(
                        "MUSB_HOST"
                      )
                    ),
                    Conditional(
                      (defined CONFIG_USB_MUSB_HDRC_HCD),
                      JumpStatement(
                        xtc.lang.cpp.Syntax$Language(
                          "break"
                        )
                      ),
                      !(defined CONFIG_USB_MUSB_HDRC_HCD),
                      JumpStatement(
                        xtc.lang.cpp.Syntax$Language(
                          "goto"
                        ),
                        IdentifierOrTypedefName(
                          xtc.lang.cpp.Syntax$Text(
                            "bad_config"
                          )
                        )
                      )
                    )
                  )
                ),
                Conditional(
                  1,
                  LabeledStatement(
                    xtc.lang.cpp.Syntax$Language(
                      "case"
                    ),
                    PrimaryIdentifier(
                      xtc.lang.cpp.Syntax$Text(
                        "MUSB_PERIPHERAL"
                      )
                    ),
                    Conditional(
                      (defined CONFIG_USB_GADGET_MUSB_HDRC),
                      JumpStatement(
                        xtc.lang.cpp.Syntax$Language(
                          "break"
                        )
                      ),
                      !(defined CONFIG_USB_GADGET_MUSB_HDRC),
                      JumpStatement(
                        xtc.lang.cpp.Syntax$Language(
                          "goto"
                        ),
                        IdentifierOrTypedefName(
                          xtc.lang.cpp.Syntax$Text(
                            "bad_config"
                          )
                        )
                      )
                    )
                  )
                ),
                Conditional(
                  (defined CONFIG_USB_MUSB_OTG),
                  LabeledStatement(
                    xtc.lang.cpp.Syntax$Language(
                      "case"
                    ),
                    PrimaryIdentifier(
                      xtc.lang.cpp.Syntax$Text(
                        "MUSB_OTG"
                      )
                    ),
                    JumpStatement(
                      xtc.lang.cpp.Syntax$Language(
                        "break"
                      )
                    )
                  )
                ),
                Conditional(
                  (defined CONFIG_USB_MUSB_OTG),
                  LabeledStatement(
                    xtc.lang.cpp.Syntax$Language(
                      "default"
                    ),
                    ExpressionStatement(
                      FunctionCall(
                        PrimaryIdentifier(
                          xtc.lang.cpp.Syntax$Text(
                            "dev_err"
                          )
                        ),
                        ArgumentExpressionList(
                          Conditional(
                            (defined CONFIG_USB_MUSB_OTG),
                            PrimaryIdentifier(
                              xtc.lang.cpp.Syntax$Text(
                                "dev"
                              )
                            )
                          ),
                          Conditional(
                            (defined CONFIG_USB_MUSB_OTG),
                            StringLiteralList(
                              Conditional(
                                (defined CONFIG_USB_MUSB_OTG),
                                xtc.lang.cpp.Syntax$Text(
                                  "\"incompatible Kconfig role setting\\n\""
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                ),
                Conditional(
                  !(defined CONFIG_USB_MUSB_OTG),
                  LabeledStatement(
                    xtc.lang.cpp.Syntax$Language(
                      "case"
                    ),
                    PrimaryIdentifier(
                      xtc.lang.cpp.Syntax$Text(
                        "MUSB_OTG"
                      )
                    ),
                    LabeledStatement(
                      IdentifierOrTypedefName(
                        xtc.lang.cpp.Syntax$Text(
                          "bad_config"
                        )
                      ),
                      LabeledStatement(
                        xtc.lang.cpp.Syntax$Language(
                          "default"
                        ),
                        ExpressionStatement(
                          FunctionCall(
                            PrimaryIdentifier(
                              xtc.lang.cpp.Syntax$Text(
                                "dev_err"
                              )
                            ),
                            ArgumentExpressionList(
                              Conditional(
                                !(defined CONFIG_USB_MUSB_OTG),
                                PrimaryIdentifier(
                                  xtc.lang.cpp.Syntax$Text(
                                    "dev"
                                  )
                                )
                              ),
                              Conditional(
                                !(defined CONFIG_USB_MUSB_OTG),
                                StringLiteralList(
                                  Conditional(
                                    !(defined CONFIG_USB_MUSB_OTG),
                                    xtc.lang.cpp.Syntax$Text(
                                      "\"incompatible Kconfig role setting\\n\""
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                ),
                Conditional(
                  1,
                  JumpStatement(
                    xtc.lang.cpp.Syntax$Language(
                      "return"
                    ),
                    UnaryExpression(
                      Unaryoperator(
                        xtc.lang.cpp.Syntax$Language(
                          "-"
                        )
                      ),
                      PrimaryIdentifier(
                        xtc.lang.cpp.Syntax$Text(
                          "EINVAL"
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
