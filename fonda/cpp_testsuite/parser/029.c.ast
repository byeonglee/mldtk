#superc_args -printAST
ExternalDeclarationList(
  Conditional(
    1,
    Declaration(
      DeclaringList(
        BasicTypeSpecifier(
          BasicTypeName(
            xtc.lang.cpp.Syntax$Language(
              "int"
            )
          )
        ),
        SimpleDeclarator(
          xtc.lang.cpp.Syntax$Text(
            "a"
          )
        )
      )
    )
  ),
  Conditional(
    1,
    Declaration(
      DeclaringList(
        BasicTypeSpecifier(
          BasicTypeName(
            xtc.lang.cpp.Syntax$Language(
              "int"
            )
          )
        ),
        SimpleDeclarator(
          xtc.lang.cpp.Syntax$Text(
            "b"
          )
        )
      )
    )
  ),
  Conditional(
    (defined A),
    Declaration(
      DeclaringList(
        BasicTypeSpecifier(
          BasicTypeName(
            xtc.lang.cpp.Syntax$Language(
              "int"
            )
          )
        ),
        SimpleDeclarator(
          xtc.lang.cpp.Syntax$Text(
            "c"
          )
        )
      )
    )
  ),
  Conditional(
    1,
    Declaration(
      DeclaringList(
        Conditional(
          !(defined A),
          BasicTypeSpecifier(
            BasicTypeName(
              xtc.lang.cpp.Syntax$Language(
                "int"
              )
            )
          ),
          (defined A),
          BasicTypeSpecifier(
            BasicTypeName(
              xtc.lang.cpp.Syntax$Language(
                "int"
              )
            )
          )
        ),
        SimpleDeclarator(
          xtc.lang.cpp.Syntax$Text(
            "d"
          )
        )
      )
    )
  ),
  Conditional(
    (defined B),
    Declaration(
      DeclaringList(
        BasicTypeSpecifier(
          BasicTypeName(
            xtc.lang.cpp.Syntax$Language(
              "int"
            )
          )
        ),
        SimpleDeclarator(
          xtc.lang.cpp.Syntax$Text(
            "e"
          )
        )
      )
    )
  ),
  Conditional(
    (defined B) && (defined C),
    Declaration(
      DeclaringList(
        BasicTypeSpecifier(
          BasicTypeName(
            xtc.lang.cpp.Syntax$Language(
              "int"
            )
          )
        ),
        SimpleDeclarator(
          xtc.lang.cpp.Syntax$Text(
            "f"
          )
        )
      )
    )
  ),
  Conditional(
    !(defined B) && D || (defined B),
    Conditional(
      (defined B),
      Declaration(
        DeclaringList(
          Conditional(
            (defined B) && !(defined C),
            BasicTypeSpecifier(
              BasicTypeName(
                xtc.lang.cpp.Syntax$Language(
                  "int"
                )
              )
            ),
            (defined B) && (defined C),
            BasicTypeSpecifier(
              BasicTypeName(
                xtc.lang.cpp.Syntax$Language(
                  "int"
                )
              )
            )
          ),
          SimpleDeclarator(
            xtc.lang.cpp.Syntax$Text(
              "g"
            )
          )
        )
      ),
      !(defined B) && D,
      Declaration(
        DeclaringList(
          BasicTypeSpecifier(
            BasicTypeName(
              xtc.lang.cpp.Syntax$Language(
                "int"
              )
            )
          ),
          SimpleDeclarator(
            xtc.lang.cpp.Syntax$Text(
              "h"
            )
          )
        )
      )
    )
  ),
  Conditional(
    1,
    Declaration(
      DeclaringList(
        Conditional(
          !(defined B) && !D,
          BasicTypeSpecifier(
            BasicTypeName(
              xtc.lang.cpp.Syntax$Language(
                "int"
              )
            )
          ),
          !(defined B) && D || (defined B),
          BasicTypeSpecifier(
            BasicTypeName(
              xtc.lang.cpp.Syntax$Language(
                "int"
              )
            )
          )
        ),
        SimpleDeclarator(
          xtc.lang.cpp.Syntax$Text(
            "i"
          )
        )
      )
    )
  )
)
