#superc_args -printAST
ExternalDeclarationList(
  Conditional(
    1,
    FunctionDefinition(
      FunctionDeclarator(
        BasicTypeSpecifier(
          BasicTypeName(
            xtc.lang.cpp.Syntax$Language(
              "int"
            )
          )
        ),
        PostfixIdentifierDeclarator(
          SimpleDeclarator(
            xtc.lang.cpp.Syntax$Text(
              "main"
            )
          )
        )
      ),
      DeclarationOrStatementList(
        Conditional(
          (defined A),
          Declaration(
            DeclaringList(
              BasicTypeSpecifier(
                BasicTypeName(
                  xtc.lang.cpp.Syntax$Language(
                    "int"
                  )
                )
              ),
              SimpleDeclarator(
                xtc.lang.cpp.Syntax$Text(
                  "x"
                )
              ),
              InitializerOpt(
                Initializer(
                  Constant(
                    xtc.lang.cpp.Syntax$Text(
                      "1"
                    )
                  )
                )
              )
            )
          )
        ),
        Conditional(
          !(defined A),
          Declaration(
            DeclaringList(
              BasicTypeSpecifier(
                BasicTypeName(
                  xtc.lang.cpp.Syntax$Language(
                    "int"
                  )
                )
              ),
              SimpleDeclarator(
                xtc.lang.cpp.Syntax$Text(
                  "x"
                )
              ),
              InitializerOpt(
                Initializer(
                  Constant(
                    xtc.lang.cpp.Syntax$Text(
                      "2"
                    )
                  )
                )
              )
            )
          )
        ),
        Conditional(
          1,
          Declaration(
            DeclaringList(
              Conditional(
                (defined A),
                BasicTypeSpecifier(
                  BasicTypeName(
                    xtc.lang.cpp.Syntax$Language(
                      "int"
                    )
                  )
                ),
                !(defined A),
                BasicTypeSpecifier(
                  BasicTypeName(
                    xtc.lang.cpp.Syntax$Language(
                      "int"
                    )
                  )
                )
              ),
              Conditional(
                (defined A),
                SimpleDeclarator(
                  xtc.lang.cpp.Syntax$Text(
                    "y"
                  )
                ),
                !(defined A),
                SimpleDeclarator(
                  xtc.lang.cpp.Syntax$Text(
                    "z"
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
