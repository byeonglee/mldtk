#superc_args -printAST
ExternalDeclarationList(
  Conditional(
    1,
    FunctionDefinition(
      FunctionDeclarator(
        BasicDeclarationSpecifier(
          DeclarationQualifierList(
            Conditional(
              1,
              StorageClass(
                xtc.lang.cpp.Syntax$Language(
                  "static"
                )
              )
            ),
            Conditional(
              !(defined CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || (defined CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && !(defined CONFIG_OPTIMIZE_INLINING),
              DeclarationQualifier(
                TypeQualifier(
                  FunctionSpecifier(
                    xtc.lang.cpp.Syntax$Language(
                      "inline"
                    )
                  )
                )
              )
            ),
            Conditional(
              !(defined CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || (defined CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && !(defined CONFIG_OPTIMIZE_INLINING),
              DeclarationQualifier(
                TypeQualifier(
                  AttributeSpecifier(
                    AttributeKeyword(
                      xtc.lang.cpp.Syntax$Language(
                        "__attribute__"
                      )
                    ),
                    AttributeListOpt(
                      AttributeList(
                        Conditional(
                          !(defined CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) || (defined CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && !(defined CONFIG_OPTIMIZE_INLINING),
                          Word(
                            xtc.lang.cpp.Syntax$Text(
                              "always_inline"
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            ),
            Conditional(
              (defined CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) && (defined CONFIG_OPTIMIZE_INLINING),
              DeclarationQualifier(
                TypeQualifier(
                  FunctionSpecifier(
                    xtc.lang.cpp.Syntax$Language(
                      "inline"
                    )
                  )
                )
              )
            )
          ),
          BasicTypeName(
            xtc.lang.cpp.Syntax$Language(
              "int"
            )
          )
        ),
        PostfixIdentifierDeclarator(
          SimpleDeclarator(
            xtc.lang.cpp.Syntax$Text(
              "hash"
            )
          ),
          PostfixingAbstractDeclarator(
            ParameterTypeListOpt(
              ParameterTypeList(
                ParameterList(
                  Conditional(
                    1,
                    ParameterDeclaration(
                      BasicTypeSpecifier(
                        BasicTypeName(
                          xtc.lang.cpp.Syntax$Language(
                            "int"
                          )
                        )
                      ),
                      SimpleDeclarator(
                        xtc.lang.cpp.Syntax$Text(
                          "major"
                        )
                      )
                    )
                  ),
                  Conditional(
                    1,
                    ParameterDeclaration(
                      BasicTypeSpecifier(
                        BasicTypeName(
                          xtc.lang.cpp.Syntax$Language(
                            "int"
                          )
                        )
                      ),
                      SimpleDeclarator(
                        xtc.lang.cpp.Syntax$Text(
                          "minor"
                        )
                      )
                    )
                  ),
                  Conditional(
                    1,
                    ParameterDeclaration(
                      BasicTypeSpecifier(
                        BasicTypeName(
                          xtc.lang.cpp.Syntax$Language(
                            "int"
                          )
                        )
                      ),
                      SimpleDeclarator(
                        xtc.lang.cpp.Syntax$Text(
                          "ino"
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      ),
      DeclarationOrStatementList(
        Conditional(
          1,
          Declaration(
            DeclaringList(
              BasicTypeSpecifier(
                BasicTypeSpecifier(
                  BasicTypeName(
                    xtc.lang.cpp.Syntax$Language(
                      "unsigned"
                    )
                  )
                ),
                BasicTypeName(
                  xtc.lang.cpp.Syntax$Language(
                    "long"
                  )
                )
              ),
              SimpleDeclarator(
                xtc.lang.cpp.Syntax$Text(
                  "tmp"
                )
              ),
              InitializerOpt(
                Initializer(
                  AdditiveExpression(
                    AdditiveExpression(
                      PrimaryIdentifier(
                        xtc.lang.cpp.Syntax$Text(
                          "ino"
                        )
                      ),
                      xtc.lang.cpp.Syntax$Language(
                        "+"
                      ),
                      PrimaryIdentifier(
                        xtc.lang.cpp.Syntax$Text(
                          "minor"
                        )
                      )
                    ),
                    xtc.lang.cpp.Syntax$Language(
                      "+"
                    ),
                    ShiftExpression(
                      PrimaryIdentifier(
                        xtc.lang.cpp.Syntax$Text(
                          "major"
                        )
                      ),
                      xtc.lang.cpp.Syntax$Language(
                        "<<"
                      ),
                      Constant(
                        xtc.lang.cpp.Syntax$Text(
                          "3"
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        ),
        Conditional(
          1,
          ExpressionStatement(
            AssignmentExpression(
              PrimaryIdentifier(
                xtc.lang.cpp.Syntax$Text(
                  "tmp"
                )
              ),
              AssignmentOperator(
                xtc.lang.cpp.Syntax$Language(
                  "+="
                )
              ),
              ShiftExpression(
                PrimaryIdentifier(
                  xtc.lang.cpp.Syntax$Text(
                    "tmp"
                  )
                ),
                xtc.lang.cpp.Syntax$Language(
                  ">>"
                ),
                Constant(
                  xtc.lang.cpp.Syntax$Text(
                    "5"
                  )
                )
              )
            )
          )
        ),
        Conditional(
          1,
          JumpStatement(
            xtc.lang.cpp.Syntax$Language(
              "return"
            ),
            AndExpression(
              PrimaryIdentifier(
                xtc.lang.cpp.Syntax$Text(
                  "tmp"
                )
              ),
              xtc.lang.cpp.Syntax$Language(
                "&"
              ),
              Constant(
                xtc.lang.cpp.Syntax$Text(
                  "31"
                )
              )
            )
          )
        )
      )
    )
  )
)
