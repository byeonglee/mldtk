/*
 * xtc - The eXTensible Compiler
 * Copyright (C) 2010 New York University
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * version 2 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,
 * USA.
 */

/**
 * Grammar for the Brooklet Factory
 *
 * @author Robert Soule
 * @version $Revision: 1.3 $
 */

module xtc.lang.babble.brooklet.Factory;

instantiate xtc.lang.babble.brooklet.Pattern(xtc.lang.babble.brooklet.Core);
instantiate xtc.util.Spacing;
instantiate xtc.lang.babble.brooklet.Identifier(xtc.util.Spacing);
instantiate xtc.lang.babble.brooklet.Symbol(xtc.util.Spacing);
instantiate xtc.lang.babble.boat.Constant(xtc.util.Spacing);

modify xtc.lang.babble.brooklet.Core(xtc.lang.babble.brooklet.Identifier, 
                                     xtc.lang.babble.brooklet.Symbol, 
                                     xtc.lang.babble.boat.Constant, 
                                     xtc.util.Spacing);

import xtc.lang.babble.brooklet.Identifier;
import xtc.lang.babble.brooklet.Symbol;
import xtc.lang.babble.brooklet.Pattern;
import xtc.util.Spacing;

option withLocation, constant, flatten;

 public generic Factory =
   Spacing void:"factory":Word QualifiedIdentifier
   void:"{":Symbol Methods void:"}":Symbol EndOfFile
   ;
 
generic Methods = Method+ ;

generic Method = Word void:"{":Symbol BrookletPattern void:"}":Symbol ;

generic QualifiedIdentifier =
  Identifier ( void:".":Symbol Identifier )*
  ;

