/*
 * xtc - The eXTensible Compiler
 * Copyright (C) 2010 New York University
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * version 2 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,
 * USA.
 */

/**
 * Definition of Brooklet identifiers and keywords.
 *
 * @author Robert Soule
 * @version $Revision: 1.8 $
 */
module xtc.lang.babble.brooklet.Identifier(Spacing);

import Spacing;

body {
  static {
    add(BROOKLET_KEYWORDS, new String[] {
      "input",
      "output"
    });
  }
}

option setOfString(BROOKLET_KEYWORDS);

String Identifier          = yyValue:Word  &{ ! contains(BROOKLET_KEYWORDS, toText(yyValue)) } Spacing ;
String UppercaseIdentifier = yyValue:UppercaseCharacters &{ ! contains(BROOKLET_KEYWORDS, toText(yyValue)) } Spacing;
String Keyword             = yyValue:Word  &{ contains(BROOKLET_KEYWORDS, toText(yyValue))   } Spacing ;
String Word                = WordCharacters Spacing ;

transient String WordCharacters = [a-zA-Z_0-9]+ ;
transient String UppercaseCharacters = [A-Z_] [a-zA-Z_0-9]* ;



