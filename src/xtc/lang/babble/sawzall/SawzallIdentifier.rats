/*
 * xtc - The eXTensible Compiler
 * Copyright (C) 2009 New York University
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * version 2 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,
 * USA.
 */

/**
 * Grammar for Sawzall.
 *
 * @author Robert Soule
 * @version $Revision: 1.2 $
 */
module xtc.lang.babble.sawzall.SawzallIdentifier(Spacing, Reserved, Identifier);

import Spacing;
import Reserved;
modify Identifier;

body {
  static {
    add(SAWZALL_KEYWORDS, new String[] {
      "avg",    
      "count",    
      "emit",    
      "input",   
      "of",    
      "sum",    
      "table"
    });
  }
}

option setOfString(SAWZALL_KEYWORDS), setOfString(OCAML_KEYWORDS);

String Keyword              := yyValue:Word &{ contains(SAWZALL_KEYWORDS, toText(yyValue)) || contains(OCAML_KEYWORDS, toText(yyValue)) } Spacing;
String Identifier           := yyValue:Word &{ !contains(SAWZALL_KEYWORDS, toText(yyValue)) && !contains(OCAML_KEYWORDS, toText(yyValue)) } Spacing;

